import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable Ubuntu.Components 0.1'

Module {
    dependencies: [
        "QtFeedback 5.0",
        "QtGraphicalEffects 1.0",
        "QtQuick 2.4",
        "QtQuick.Layouts 1.1",
        "QtQuick.Window 2.2",
        "Ubuntu.Components.ListItems 1.3",
        "Ubuntu.Components.Popups 1.3",
        "Ubuntu.Components.Styles 1.3",
        "Ubuntu.Components.Themes 1.3",
        "Ubuntu.Components.Themes.Ambiance 1.3",
        "Ubuntu.PerformanceMetrics 1.0"
    ]
    Component {
        name: "FilterBehavior"
        prototype: "QObject"
        exports: ["Ubuntu.Components/FilterBehavior 1.1"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "property"; type: "string" }
        Property { name: "pattern"; type: "QRegExp" }
    }
    Component {
        name: "InverseMouseAreaType"
        defaultProperty: "data"
        prototype: "QQuickMouseArea"
        exports: [
            "Ubuntu.Components/InverseMouseArea 0.1",
            "Ubuntu.Components/InverseMouseArea 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "sensingArea"; type: "QQuickItem"; isPointer: true }
        Property { name: "topmostItem"; type: "bool" }
        Method {
            name: "contains"
            type: "bool"
            Parameter { name: "point"; type: "QPointF" }
        }
    }
    Component {
        name: "LiveTimer"
        prototype: "QObject"
        exports: ["Ubuntu.Components/LiveTimer 1.3"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Frequency"
            values: {
                "Disabled": 0,
                "Second": 1,
                "Minute": 2,
                "Hour": 3,
                "Relative": 4
            }
        }
        Property { name: "frequency"; type: "Frequency" }
        Property { name: "relativeTime"; type: "QDateTime" }
        Signal { name: "trigger" }
    }
    Component {
        name: "QAbstractProxyModel"
        prototype: "QAbstractItemModel"
        Property { name: "sourceModel"; type: "QAbstractItemModel"; isPointer: true }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapSelectionToSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
        Method {
            name: "mapSelectionFromSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
    }
    Component {
        name: "QQmlPropertyMap"
        prototype: "QObject"
        Signal {
            name: "valueChanged"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "keys"; type: "QStringList" }
    }
    Component {
        name: "QQuickClipboard"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/Clipboard 0.1",
            "Ubuntu.Components/Clipboard 1.0"
        ]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0, 0]
        Property { name: "data"; type: "QQuickMimeData"; isReadonly: true; isPointer: true }
        Method {
            name: "push"
            Parameter { name: "data"; type: "QVariant" }
        }
        Method { name: "clear" }
        Method { name: "newData"; type: "QQuickMimeData*" }
    }
    Component {
        name: "QQuickMimeData"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/MimeData 0.1",
            "Ubuntu.Components/MimeData 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "formats"; type: "QStringList"; isReadonly: true }
        Property { name: "text"; type: "string" }
        Property { name: "html"; type: "string" }
        Property { name: "urls"; type: "QList<QUrl>" }
        Property { name: "color"; type: "QColor" }
        Property { name: "data"; type: "QVariant" }
        Signal { name: "typeChanged" }
    }
    Component {
        name: "QSortFilterProxyModel"
        prototype: "QAbstractProxyModel"
        Property { name: "filterRegExp"; type: "QRegExp" }
        Property { name: "filterKeyColumn"; type: "int" }
        Property { name: "dynamicSortFilter"; type: "bool" }
        Property { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "isSortLocaleAware"; type: "bool" }
        Property { name: "sortRole"; type: "int" }
        Property { name: "filterRole"; type: "int" }
        Method {
            name: "setFilterRegExp"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "string" }
        }
        Method { name: "clear" }
        Method { name: "invalidate" }
    }
    Component {
        name: "QSortFilterProxyModelQML"
        prototype: "QSortFilterProxyModel"
        exports: ["Ubuntu.Components/SortFilterModel 1.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "model"; type: "QAbstractItemModel"; isPointer: true }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "sort"; type: "SortBehavior"; isReadonly: true; isPointer: true }
        Property { name: "filter"; type: "FilterBehavior"; isReadonly: true; isPointer: true }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "row"; type: "int" }
        }
        Method { name: "count"; type: "int" }
    }
    Component {
        name: "SortBehavior"
        prototype: "QObject"
        exports: ["Ubuntu.Components/SortBehavior 1.1"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "property"; type: "string" }
        Property { name: "order"; type: "Qt::SortOrder" }
    }
    Component {
        name: "UCAbstractButton"
        defaultProperty: "data"
        prototype: "UCActionItem"
        exports: ["Ubuntu.Components/AbstractButton 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Property { name: "sensingMargins"; type: "UCMargins"; isReadonly: true; isPointer: true }
        Property { name: "__acceptEvents"; type: "bool" }
        Property { name: "__mouseArea"; type: "QQuickMouseArea"; isReadonly: true; isPointer: true }
        Signal { name: "clicked" }
        Signal { name: "pressAndHold" }
    }
    Component {
        name: "UCAction"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/Action 0.1",
            "Ubuntu.Components/Action 1.0",
            "Ubuntu.Components/Action 1.3"
        ]
        exportMetaObjectRevisions: [0, 0, 1]
        Enum {
            name: "Type"
            values: {
                "None": 0,
                "String": 1,
                "Integer": 2,
                "Bool": 3,
                "Real": 4,
                "Object": 255
            }
        }
        Property { name: "name"; type: "string" }
        Property { name: "text"; type: "string" }
        Property { name: "iconName"; type: "string" }
        Property { name: "description"; type: "string" }
        Property { name: "keywords"; type: "string" }
        Property { name: "enabled"; type: "bool" }
        Property { name: "parameterType"; type: "Type" }
        Property { name: "iconSource"; type: "QUrl" }
        Property { name: "visible"; type: "bool" }
        Property { name: "itemHint"; type: "QQmlComponent"; isPointer: true }
        Property { name: "shortcut"; revision: 1; type: "QVariant" }
        Signal {
            name: "triggered"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "trigger"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "trigger" }
    }
    Component {
        name: "UCActionContext"
        defaultProperty: "actions"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/ActionContext 0.1",
            "Ubuntu.Components/ActionContext 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        attachedType: "UCActionContextAttached"
        Property { name: "actions"; type: "UCAction"; isList: true; isReadonly: true }
        Property { name: "active"; type: "bool" }
        Method {
            name: "addAction"
            Parameter { name: "action"; type: "UCAction"; isPointer: true }
        }
        Method {
            name: "removeAction"
            Parameter { name: "action"; type: "UCAction"; isPointer: true }
        }
    }
    Component { name: "UCActionContextAttached"; prototype: "QObject" }
    Component {
        name: "UCActionItem"
        defaultProperty: "data"
        prototype: "UCStyledItemBase"
        exports: [
            "Ubuntu.Components/ActionItem 0.1",
            "Ubuntu.Components/ActionItem 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "action"; type: "UCAction"; isPointer: true }
        Property { name: "text"; type: "string" }
        Property { name: "iconSource"; type: "QUrl" }
        Property { name: "iconName"; type: "string" }
        Property { name: "enabled"; type: "bool" }
        Property { name: "visible"; type: "bool" }
        Signal {
            name: "triggered"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal { name: "enabledChanged2" }
        Signal { name: "visibleChanged2" }
        Method {
            name: "trigger"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "trigger" }
    }
    Component {
        name: "UCActionManager"
        defaultProperty: "actions"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/ActionManager 0.1",
            "Ubuntu.Components/ActionManager 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "actions"; type: "UCAction"; isList: true; isReadonly: true }
        Property { name: "localContexts"; type: "UCActionContext"; isList: true; isReadonly: true }
        Property { name: "globalContext"; type: "UCActionContext"; isReadonly: true; isPointer: true }
        Signal { name: "quit" }
        Method {
            name: "addAction"
            Parameter { name: "action"; type: "UCAction"; isPointer: true }
        }
        Method {
            name: "removeAction"
            Parameter { name: "action"; type: "UCAction"; isPointer: true }
        }
        Method {
            name: "addLocalContext"
            Parameter { name: "context"; type: "UCActionContext"; isPointer: true }
        }
        Method {
            name: "removeLocalContext"
            Parameter { name: "context"; type: "UCActionContext"; isPointer: true }
        }
    }
    Component {
        name: "UCAlarm"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/Alarm 0.1",
            "Ubuntu.Components/Alarm 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Enum {
            name: "Status"
            values: {
                "Ready": 1,
                "InProgress": 2,
                "Fail": 3
            }
        }
        Enum {
            name: "Operation"
            values: {
                "NoOperation": 0,
                "Saving": 1,
                "Canceling": 2,
                "Reseting": 3
            }
        }
        Enum {
            name: "Error"
            values: {
                "NoError": 0,
                "InvalidDate": 1,
                "EarlyDate": 2,
                "NoDaysOfWeek": 3,
                "OneTimeOnMoreDays": 4,
                "InvalidEvent": 5,
                "OperationPending": 6,
                "AdaptationError": 100
            }
        }
        Enum {
            name: "AlarmType"
            values: {
                "OneTime": 0,
                "Repeating": 1
            }
        }
        Enum {
            name: "DayOfWeek"
            values: {
                "Monday": 1,
                "Tuesday": 2,
                "Wednesday": 4,
                "Thursday": 8,
                "Friday": 16,
                "Saturday": 32,
                "Sunday": 64,
                "Daily": 127,
                "AutoDetect": 128
            }
        }
        Enum {
            name: "DaysOfWeek"
            values: {
                "Monday": 1,
                "Tuesday": 2,
                "Wednesday": 4,
                "Thursday": 8,
                "Friday": 16,
                "Saturday": 32,
                "Sunday": 64,
                "Daily": 127,
                "AutoDetect": 128
            }
        }
        Property { name: "enabled"; type: "bool" }
        Property { name: "message"; type: "string" }
        Property { name: "date"; type: "QDateTime" }
        Property { name: "type"; type: "AlarmType" }
        Property { name: "daysOfWeek"; type: "DaysOfWeek" }
        Property { name: "sound"; type: "QUrl" }
        Property { name: "error"; type: "int"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Signal {
            name: "statusChanged"
            Parameter { name: "operation"; type: "Operation" }
        }
        Method { name: "save" }
        Method { name: "cancel" }
        Method { name: "reset" }
    }
    Component {
        name: "UCAlarmModel"
        prototype: "QAbstractListModel"
        exports: [
            "Ubuntu.Components/AlarmModel 0.1",
            "Ubuntu.Components/AlarmModel 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "count"; type: "int"; isReadonly: true }
        Method { name: "refresh"; revision: 1 }
        Method {
            name: "get"
            type: "UCAlarm*"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "UCAppHeaderBase"
        defaultProperty: "data"
        prototype: "UCHeader"
        exports: ["Ubuntu.Components.Private/AppHeaderBase 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "animate"; type: "bool" }
        Property { name: "theme"; type: "UCTheme"; isPointer: true }
        Signal { name: "themeChanged2" }
    }
    Component {
        name: "UCApplication"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/UCApplication 0.1",
            "Ubuntu.Components/UCApplication 1.0"
        ]
        isCreatable: false
        exportMetaObjectRevisions: [0, 0]
        Property { name: "applicationName"; type: "string" }
        Property { name: "inputMethod"; type: "QObject"; isPointer: true }
    }
    Component {
        name: "UCArgument"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/Argument 0.1",
            "Ubuntu.Components/Argument 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "name"; type: "string" }
        Property { name: "help"; type: "string" }
        Property { name: "required"; type: "bool" }
        Property { name: "valueNames"; type: "QStringList" }
        Method {
            name: "at"
            type: "QVariant"
            Parameter { name: "i"; type: "int" }
        }
    }
    Component {
        name: "UCArguments"
        defaultProperty: "arguments"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/Arguments 0.1",
            "Ubuntu.Components/Arguments 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "defaultArgument"; type: "UCArgument"; isPointer: true }
        Property { name: "arguments"; type: "UCArgument"; isList: true; isReadonly: true }
        Property { name: "values"; type: "QQmlPropertyMap"; isReadonly: true; isPointer: true }
        Property { name: "error"; type: "bool"; isReadonly: true }
        Property { name: "errorMessage"; type: "string"; isReadonly: true }
        Method { name: "printUsage" }
        Method {
            name: "quitWithError"
            Parameter { name: "errorMessage"; type: "string" }
        }
        Method { name: "quitWithError" }
    }
    Component {
        name: "UCBottomEdge"
        defaultProperty: "data"
        prototype: "UCStyledItemBase"
        exports: ["Ubuntu.Components/BottomEdge 1.3"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Hidden": 0,
                "Revealed": 1,
                "Committed": 2
            }
        }
        Enum {
            name: "DragDirection"
            values: {
                "Undefined": 0,
                "Upwards": 1,
                "Downwards": 2
            }
        }
        Property { name: "hint"; type: "UCBottomEdgeHint"; isReadonly: true; isPointer: true }
        Property { name: "dragProgress"; type: "double"; isReadonly: true }
        Property { name: "dragDirection"; type: "DragDirection"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "contentUrl"; type: "QUrl" }
        Property { name: "contentComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "contentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "regions"; type: "UCBottomEdgeRegion"; isList: true; isReadonly: true }
        Property { name: "activeRegion"; type: "UCBottomEdgeRegion"; isReadonly: true; isPointer: true }
        Property { name: "preloadContent"; type: "bool" }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Signal {
            name: "dragProgressChanged"
            Parameter { name: "dragProgress"; type: "double" }
        }
        Signal {
            name: "dragDirectionChanged"
            Parameter { name: "direction"; type: "UCBottomEdge::DragDirection" }
        }
        Signal {
            name: "statusChanged"
            Parameter { name: "status"; type: "UCBottomEdge::Status" }
        }
        Signal {
            name: "contentChanged"
            Parameter { name: "url"; type: "QUrl" }
        }
        Signal {
            name: "contentComponentChanged"
            Parameter { name: "component"; type: "QQmlComponent"; isPointer: true }
        }
        Signal {
            name: "activeRegionChanged"
            Parameter { name: "activeRegion"; type: "UCBottomEdgeRegion"; isPointer: true }
        }
        Signal { name: "commitStarted" }
        Signal { name: "commitCompleted" }
        Signal { name: "collapseStarted" }
        Signal { name: "collapseCompleted" }
        Method { name: "commit" }
        Method { name: "collapse" }
    }
    Component {
        name: "UCBottomEdgeHint"
        defaultProperty: "data"
        prototype: "UCActionItem"
        exports: ["Ubuntu.Components/BottomEdgeHint 1.3"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Hidden": 0,
                "Inactive": 1,
                "Active": 2,
                "Locked": 3
            }
        }
        Property { name: "flickable"; type: "QQuickFlickable"; isPointer: true }
        Property { name: "status"; type: "Status" }
        Property { name: "deactivateTimeout"; type: "int" }
        Property { name: "swipeArea"; type: "UCSwipeArea"; isReadonly: true; isPointer: true }
        Property { name: "state"; type: "string" }
        Signal { name: "textChanged" }
        Signal { name: "iconSourceChanged" }
        Signal { name: "iconNameChanged" }
        Signal { name: "clicked" }
    }
    Component {
        name: "UCBottomEdgeRegion"
        prototype: "QObject"
        exports: ["Ubuntu.Components/BottomEdgeRegion 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "enabled"; type: "bool" }
        Property { name: "from"; type: "double" }
        Property { name: "to"; type: "double" }
        Property { name: "contentUrl"; type: "QUrl" }
        Property { name: "contentComponent"; type: "QQmlComponent"; isPointer: true }
        Signal {
            name: "contentChanged"
            Parameter { name: "url"; type: "QUrl" }
        }
        Signal {
            name: "contentComponentChanged"
            Parameter { name: "component"; type: "QQmlComponent"; isPointer: true }
        }
        Signal { name: "entered" }
        Signal { name: "exited" }
        Signal { name: "dragEnded" }
    }
    Component {
        name: "UCBottomEdgeStyle"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Ubuntu.Components.Styles/BottomEdgeStyle 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "panel"; type: "QQuickItem"; isPointer: true }
        Property { name: "contentItem"; type: "QQuickItem"; isPointer: true }
        Property { name: "panelAnimation"; type: "QQuickAbstractAnimation"; isPointer: true }
        Property { name: "revealThreshold"; type: "double" }
    }
    Component {
        name: "UCDragEvent"
        prototype: "QObject"
        exports: ["Ubuntu.Components/ListItemDrag 1.2"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Started": 0,
                "Moving": 1,
                "Dropped": 2
            }
        }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "from"; type: "int"; isReadonly: true }
        Property { name: "to"; type: "int"; isReadonly: true }
        Property { name: "minimumIndex"; type: "int" }
        Property { name: "maximumIndex"; type: "int" }
        Property { name: "accept"; type: "bool" }
    }
    Component {
        name: "UCFontUtils"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/UCFontUtils 0.1",
            "Ubuntu.Components/UCFontUtils 1.0"
        ]
        isCreatable: false
        exportMetaObjectRevisions: [0, 0]
        Method {
            name: "sizeToPixels"
            type: "double"
            Parameter { name: "size"; type: "string" }
        }
        Method {
            name: "modularScale"
            type: "double"
            Parameter { name: "size"; type: "string" }
        }
    }
    Component {
        name: "UCFrame"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Ubuntu.Components.Private/Frame 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "thickness"; type: "double" }
        Property { name: "radius"; type: "double" }
        Property { name: "color"; type: "QColor" }
    }
    Component {
        name: "UCHaptics"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/Haptics 0.1",
            "Ubuntu.Components/Haptics 1.0"
        ]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0, 0]
        Property { name: "enabled"; type: "bool"; isReadonly: true }
        Property { name: "effect"; type: "QObject"; isReadonly: true; isPointer: true }
        Method {
            name: "play"
            Parameter { name: "customEffect"; type: "QVariant" }
        }
        Method { name: "play" }
    }
    Component {
        name: "UCHeader"
        defaultProperty: "data"
        prototype: "UCStyledItemBase"
        exports: ["Ubuntu.Components/Header 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "flickable"; type: "QQuickFlickable"; isPointer: true }
        Property { name: "exposed"; type: "bool" }
        Property { name: "moving"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "UCInverseMouse"
        prototype: "UCMouse"
        exports: [
            "Ubuntu.Components/InverseMouse 0.1",
            "Ubuntu.Components/InverseMouse 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
    }
    Component {
        name: "UCLabel"
        defaultProperty: "data"
        prototype: "QQuickText"
        exports: ["Ubuntu.Components/Label 1.3"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "TextSize"
            values: {
                "XxSmall": 0,
                "XSmall": 1,
                "Small": 2,
                "Medium": 3,
                "Large": 4,
                "XLarge": 5
            }
        }
        Property { name: "textSize"; type: "TextSize" }
        Property { name: "renderType"; type: "RenderType" }
        Property { name: "font"; type: "QFont" }
        Property { name: "color"; type: "QColor" }
        Property { name: "fontSize"; type: "string" }
        Signal { name: "fontChanged2" }
        Signal { name: "colorChanged2" }
    }
    Component {
        name: "UCListItem"
        defaultProperty: "listItemData"
        prototype: "UCStyledItemBase"
        exports: [
            "Ubuntu.Components/ListItem 1.2",
            "Ubuntu.Components/ListItem 1.3"
        ]
        exportMetaObjectRevisions: [0, 1]
        Property { name: "contentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "divider"; type: "UCListItemDivider"; isReadonly: true; isPointer: true }
        Property { name: "leadingActions"; type: "UCListItemActions"; isPointer: true }
        Property { name: "trailingActions"; type: "UCListItemActions"; isPointer: true }
        Property { name: "highlighted"; type: "bool"; isReadonly: true }
        Property { name: "contentMoving"; type: "bool"; isReadonly: true }
        Property { name: "color"; type: "QColor" }
        Property { name: "highlightColor"; type: "QColor" }
        Property { name: "dragging"; type: "bool"; isReadonly: true }
        Property { name: "dragMode"; type: "bool" }
        Property { name: "selected"; type: "bool" }
        Property { name: "selectMode"; type: "bool" }
        Property { name: "action"; type: "UCAction"; isPointer: true }
        Property { name: "listItemData"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "listItemChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property {
            name: "expansion"
            revision: 1
            type: "UCListItemExpansion"
            isReadonly: true
            isPointer: true
        }
        Property { name: "swipeEnabled"; revision: 1; type: "bool" }
        Property { name: "swiped"; revision: 1; type: "bool"; isReadonly: true }
        Signal { name: "swipeEnabledChanged"; revision: 1 }
        Signal { name: "swipedChanged"; revision: 1 }
        Signal { name: "clicked" }
        Signal { name: "pressAndHold" }
        Signal { name: "contentMovementStarted" }
        Signal { name: "contentMovementEnded" }
    }
    Component {
        name: "UCListItemActions"
        defaultProperty: "data"
        prototype: "QObject"
        exports: ["Ubuntu.Components/ListItemActions 1.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "actions"; type: "UCAction"; isList: true; isReadonly: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        name: "UCListItemDivider"
        defaultProperty: "data"
        prototype: "QQuickItem"
        Property { name: "colorFrom"; type: "QColor" }
        Property { name: "colorTo"; type: "QColor" }
    }
    Component {
        name: "UCListItemExpansion"
        prototype: "QObject"
        Property { name: "expanded"; type: "bool" }
        Property { name: "height"; type: "double" }
    }
    Component {
        name: "UCListItemLayout"
        defaultProperty: "data"
        prototype: "UCSlotsLayout"
        exports: ["Ubuntu.Components/ListItemLayout 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "title"; type: "UCLabel"; isReadonly: true; isPointer: true }
        Property { name: "subtitle"; type: "UCLabel"; isReadonly: true; isPointer: true }
        Property { name: "summary"; type: "UCLabel"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "UCListItemStyle"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: [
            "Ubuntu.Components.Styles/ListItemStyle 1.2",
            "Ubuntu.Components.Styles/ListItemStyle 1.3"
        ]
        exportMetaObjectRevisions: [0, 1]
        Property { name: "snapAnimation"; type: "QQuickAbstractAnimation"; isPointer: true }
        Property { name: "dropAnimation"; type: "QQuickPropertyAnimation"; isPointer: true }
        Property { name: "animatePanels"; type: "bool"; isReadonly: true }
        Property { name: "dragPanel"; type: "QQuickItem"; isPointer: true }
        Property { name: "listItemIndex"; revision: 1; type: "int"; isReadonly: true }
        Property {
            name: "flickable"
            revision: 1
            type: "QQuickFlickable"
            isReadonly: true
            isPointer: true
        }
        Signal { name: "listItemIndexChanged"; revision: 1 }
        Signal { name: "flickableChanged"; revision: 1 }
        Method {
            name: "swipeEvent"
            Parameter { name: "event"; type: "UCSwipeEvent"; isPointer: true }
        }
        Method { name: "rebound" }
    }
    Component {
        name: "UCMainViewBase"
        defaultProperty: "data"
        prototype: "UCPageTreeNode"
        exports: ["Ubuntu.Components/MainViewBase 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "applicationName"; type: "string" }
        Property { name: "anchorToKeyboard"; type: "bool" }
        Property { name: "headerColor"; type: "QColor" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "footerColor"; type: "QColor" }
        Property { name: "actions"; type: "UCAction"; isList: true; isReadonly: true }
        Property { name: "actionManager"; type: "UCActionManager"; isReadonly: true; isPointer: true }
        Property { name: "actionContext"; type: "UCPopupContext"; isReadonly: true; isPointer: true }
        Signal {
            name: "applicationNameChanged"
            Parameter { name: "applicationName"; type: "string" }
        }
        Signal {
            name: "anchorToKeyboardChanged"
            Parameter { name: "anchorToKeyboard"; type: "bool" }
        }
        Signal {
            name: "headerColorChanged"
            Parameter { name: "headerColor"; type: "QColor" }
        }
        Signal {
            name: "backgroundColorChanged"
            Parameter { name: "backgroundColor"; type: "QColor" }
        }
        Signal {
            name: "footerColorChanged"
            Parameter { name: "footerColor"; type: "QColor" }
        }
        Signal {
            name: "actionManagerChanged"
            Parameter { name: "actionManager"; type: "UCActionManager"; isPointer: true }
        }
        Signal {
            name: "actionContextChanged"
            Parameter { name: "actionContext"; type: "UCPopupContext"; isPointer: true }
        }
    }
    Component {
        name: "UCMargins"
        prototype: "QObject"
        Property { name: "left"; type: "double" }
        Property { name: "top"; type: "double" }
        Property { name: "right"; type: "double" }
        Property { name: "bottom"; type: "double" }
        Property { name: "all"; type: "double" }
    }
    Component {
        name: "UCMathUtils"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/MathUtils 0.1",
            "Ubuntu.Components/MathUtils 1.0"
        ]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0, 0]
        Method {
            name: "clamp"
            type: "double"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "min"; type: "double" }
            Parameter { name: "max"; type: "double" }
        }
        Method {
            name: "lerp"
            type: "double"
            Parameter { name: "delta"; type: "double" }
            Parameter { name: "from"; type: "double" }
            Parameter { name: "to"; type: "double" }
        }
        Method {
            name: "projectValue"
            type: "double"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "xmin"; type: "double" }
            Parameter { name: "xmax"; type: "double" }
            Parameter { name: "ymin"; type: "double" }
            Parameter { name: "ymax"; type: "double" }
        }
        Method {
            name: "clampAndProject"
            type: "double"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "xmin"; type: "double" }
            Parameter { name: "xmax"; type: "double" }
            Parameter { name: "ymin"; type: "double" }
            Parameter { name: "ymax"; type: "double" }
        }
    }
    Component {
        name: "UCMouse"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/Mouse 0.1",
            "Ubuntu.Components/Mouse 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Enum {
            name: "Priority"
            values: {
                "BeforeItem": 0,
                "AfterItem": 1
            }
        }
        Property { name: "enabled"; type: "bool" }
        Property { name: "acceptedButtons"; type: "Qt::MouseButtons"; isReadonly: true }
        Property { name: "hoverEnabled"; type: "bool"; isReadonly: true }
        Property { name: "clickAndHoldThreshold"; type: "int" }
        Property { name: "forwardTo"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "priority"; type: "Priority" }
        Property { name: "ignoreSynthesizedEvents"; type: "bool" }
        Signal {
            name: "pressed"
            Parameter { name: "mouse"; type: "QQuickMouseEvent"; isPointer: true }
            Parameter { name: "host"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "released"
            Parameter { name: "mouse"; type: "QQuickMouseEvent"; isPointer: true }
            Parameter { name: "host"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "clicked"
            Parameter { name: "mouse"; type: "QQuickMouseEvent"; isPointer: true }
            Parameter { name: "host"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "pressAndHold"
            Parameter { name: "mouse"; type: "QQuickMouseEvent"; isPointer: true }
            Parameter { name: "host"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "doubleClicked"
            Parameter { name: "mouse"; type: "QQuickMouseEvent"; isPointer: true }
            Parameter { name: "host"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "positionChanged"
            Parameter { name: "mouse"; type: "QQuickMouseEvent"; isPointer: true }
            Parameter { name: "host"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "entered"
            Parameter { name: "event"; type: "QQuickMouseEvent"; isPointer: true }
            Parameter { name: "host"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "exited"
            Parameter { name: "event"; type: "QQuickMouseEvent"; isPointer: true }
            Parameter { name: "host"; type: "QQuickItem"; isPointer: true }
        }
    }
    Component {
        name: "UCNamespace"
        prototype: "QObject"
        exports: ["Ubuntu.Components/Ubuntu 1.2"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "CaptionsStyle"
            values: {
                "TitleCaptionStyle": 5000,
                "SummaryCaptionStyle": 5001
            }
        }
    }
    Component {
        name: "UCNamespaceV13"
        prototype: "UCNamespace"
        exports: ["Ubuntu.Components/Ubuntu 1.3"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "toolkitVersion"; type: "ushort"; isReadonly: true }
        Property { name: "toolkitVersionMajor"; type: "ushort"; isReadonly: true }
        Property { name: "toolkitVersionMinor"; type: "ushort"; isReadonly: true }
        Method {
            name: "version"
            type: "ushort"
            Parameter { name: "major"; type: "uchar" }
            Parameter { name: "minor"; type: "uchar" }
        }
    }
    Component {
        name: "UCPageTreeNode"
        defaultProperty: "data"
        prototype: "UCStyledItemBase"
        exports: ["Ubuntu.Components/PageTreeNode 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "isLeaf"; type: "bool" }
        Property { name: "toolbar"; type: "QQuickItem"; isPointer: true }
        Property { name: "activeLeafNode"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "active"; type: "bool" }
        Property { name: "parentNode"; type: "UCPageTreeNode"; isPointer: true }
        Property { name: "pageStack"; type: "QQuickItem"; isPointer: true }
        Property { name: "__isPageTreeNode"; type: "bool"; isReadonly: true }
        Property { name: "__propagated"; type: "QObject"; isPointer: true }
        Signal {
            name: "isLeafChanged"
            Parameter { name: "isLeaf"; type: "bool" }
        }
        Signal {
            name: "activeChanged"
            Parameter { name: "active"; type: "bool" }
        }
        Signal {
            name: "parentNodeChanged"
            Parameter { name: "parentNode"; type: "UCPageTreeNode"; isPointer: true }
        }
        Signal {
            name: "pageStackChanged"
            Parameter { name: "pageStack"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "activeLeafNodeChanged"
            Parameter { name: "activeLeafNode"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "propagatedChanged"
            Parameter { name: "propagated"; type: "QObject"; isPointer: true }
        }
        Signal {
            name: "toolbarChanged"
            Parameter { name: "toolbar"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "isPageTreeNodeChanged"
            Parameter { name: "isPageTreeNode"; type: "bool" }
        }
        Method { name: "dumpNodeTree" }
    }
    Component {
        name: "UCPageWrapper"
        defaultProperty: "data"
        prototype: "UCPageTreeNode"
        exports: ["Ubuntu.Components.Private/PageWrapper 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "reference"; type: "QVariant" }
        Property { name: "object"; type: "QQuickItem"; isPointer: true }
        Property { name: "canDestroy"; type: "bool"; isReadonly: true }
        Property { name: "column"; type: "int" }
        Property { name: "parentPage"; type: "QQuickItem"; isPointer: true }
        Property { name: "parentWrapper"; type: "QQuickItem"; isPointer: true }
        Property { name: "pageHolder"; type: "QQuickItem"; isPointer: true }
        Property { name: "incubator"; type: "QObject"; isReadonly: true; isPointer: true }
        Property { name: "synchronous"; type: "bool" }
        Property { name: "properties"; type: "QVariant" }
        Property { name: "visible"; type: "bool" }
        Property { name: "theme"; type: "UCTheme"; isPointer: true }
        Signal {
            name: "referenceChanged"
            Parameter { name: "reference"; type: "QVariant" }
        }
        Signal {
            name: "objectChanged"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Signal {
            name: "canDestroyChanged"
            Parameter { name: "canDestroy"; type: "bool" }
        }
        Signal {
            name: "columnChanged"
            Parameter { name: "column"; type: "int" }
        }
        Signal {
            name: "parentWrapperChanged"
            Parameter { name: "parentWrapper"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "pageHolderChanged"
            Parameter { name: "pageHolder"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "synchronousChanged"
            Parameter { name: "synchronous"; type: "bool" }
        }
        Signal {
            name: "propertiesChanged"
            Parameter { name: "properties"; type: "QVariant" }
        }
        Signal { name: "pageLoaded" }
        Signal {
            name: "parentPageChanged"
            Parameter { name: "parentPage"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "incubatorChanged"
            Parameter { name: "incubator"; type: "QObject"; isPointer: true }
        }
        Signal { name: "visibleChanged2" }
        Signal { name: "themeChanged2" }
        Method {
            name: "childOf"
            type: "bool"
            Parameter { name: "page"; type: "QQuickItem"; isPointer: true }
        }
        Method { name: "destroyObject" }
    }
    Component {
        name: "UCPopupContext"
        defaultProperty: "actions"
        prototype: "UCActionContext"
        exports: ["Ubuntu.Components/PopupContext 1.3"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "UCProportionalShape"
        defaultProperty: "data"
        prototype: "UCUbuntuShape"
        exports: ["Ubuntu.Components/ProportionalShape 1.3"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "UCQQuickImageExtension"
        defaultProperty: "data"
        prototype: "QQuickImageBase"
        exports: [
            "Ubuntu.Components/QQuickImageBase 0.1",
            "Ubuntu.Components/QQuickImageBase 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "source"; type: "QUrl" }
        Signal { name: "extendedSourceChanged" }
        Signal { name: "extendedSourceChanged" }
    }
    Component {
        name: "UCServiceProperties"
        prototype: "QObject"
        exports: ["Ubuntu.Components/ServiceProperties 1.1"]
        exportMetaObjectRevisions: [1]
        Enum {
            name: "ServiceType"
            values: {
                "Undefined": 0,
                "System": 1,
                "Session": 2
            }
        }
        Enum {
            name: "Status"
            values: {
                "Inactive": 0,
                "ConnectionError": 1,
                "Synchronizing": 2,
                "Active": 3
            }
        }
        Property { name: "type"; revision: 1; type: "ServiceType" }
        Property { name: "service"; revision: 1; type: "string" }
        Property { name: "path"; revision: 1; type: "string" }
        Property { name: "serviceInterface"; revision: 1; type: "string" }
        Property { name: "adaptorInterface"; revision: 1; type: "string" }
        Property { name: "error"; revision: 1; type: "string"; isReadonly: true }
        Property { name: "status"; revision: 1; type: "Status"; isReadonly: true }
    }
    Component {
        name: "UCSlotsAttached"
        prototype: "QObject"
        exports: ["Ubuntu.Components/SlotsAttached 1.3"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "position"; type: "UCSlotsLayout::UCSlotPosition" }
        Property { name: "padding"; type: "UCSlotsLayoutPadding"; isReadonly: true; isPointer: true }
        Property { name: "overrideVerticalPositioning"; type: "bool" }
    }
    Component {
        name: "UCSlotsLayout"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Ubuntu.Components/SlotsLayout 1.3"]
        exportMetaObjectRevisions: [0]
        attachedType: "UCSlotsAttached"
        Enum {
            name: "UCSlotPosition"
            values: {
                "First": -1073741824,
                "Leading": -536870912,
                "Trailing": 536870911,
                "Last": 1073741823
            }
        }
        Property { name: "mainSlot"; type: "QQuickItem"; isPointer: true }
        Property { name: "padding"; type: "UCSlotsLayoutPadding"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "UCSlotsLayoutPadding"
        prototype: "QObject"
        exports: ["Ubuntu.Components/SlotsLayoutPadding 1.3"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "leading"; type: "double" }
        Property { name: "trailing"; type: "double" }
        Property { name: "top"; type: "double" }
        Property { name: "bottom"; type: "double" }
    }
    Component {
        name: "UCStateSaver"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/StateSaver 0.1",
            "Ubuntu.Components/StateSaver 1.0"
        ]
        exportMetaObjectRevisions: [0, 0]
        attachedType: "UCStateSaverAttached"
    }
    Component {
        name: "UCStateSaverAttached"
        prototype: "QObject"
        Property { name: "enabled"; type: "bool" }
        Property { name: "properties"; type: "string" }
    }
    Component {
        name: "UCStyleHints"
        prototype: "QObject"
        exports: ["Ubuntu.Components/StyleHints 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "ignoreUnknownProperties"; type: "bool" }
    }
    Component {
        name: "UCStyledItemBase"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: [
            "Ubuntu.Components/StyledItem 0.1",
            "Ubuntu.Components/StyledItem 1.0",
            "Ubuntu.Components/StyledItem 1.1",
            "Ubuntu.Components/StyledItem 1.3"
        ]
        exportMetaObjectRevisions: [0, 0, 1, 2]
        Property { name: "keyNavigationFocus"; revision: 2; type: "bool"; isReadonly: true }
        Property { name: "activeFocusOnPress"; revision: 1; type: "bool" }
        Property { name: "activeFocusOnTab"; type: "bool" }
        Property { name: "style"; type: "QQmlComponent"; isPointer: true }
        Property { name: "__styleInstance"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "styleName"; revision: 2; type: "string" }
        Property { name: "theme"; revision: 2; type: "UCTheme"; isPointer: true }
        Signal { name: "styleInstanceChanged" }
        Signal { name: "keyNavigationFocusChanged"; revision: 2 }
        Signal { name: "activeFocusOnPressChanged"; revision: 1 }
        Signal { name: "activeFocusOnTabChanged2"; revision: 1 }
        Signal { name: "themeChanged"; revision: 2 }
        Signal { name: "styleNameChanged"; revision: 2 }
        Method {
            name: "requestFocus"
            revision: 1
            type: "bool"
            Parameter { name: "reason"; type: "Qt::FocusReason" }
        }
        Method { name: "requestFocus"; revision: 1; type: "bool" }
    }
    Component {
        name: "UCSwipeArea"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Ubuntu.Components/SwipeArea 1.3"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Direction"
            values: {
                "Rightwards": 0,
                "Leftwards": 1,
                "Downwards": 2,
                "Upwards": 3,
                "Horizontal": 4,
                "Vertical": 5
            }
        }
        Property { name: "direction"; type: "Direction" }
        Property { name: "distance"; type: "double"; isReadonly: true }
        Property { name: "touchPosition"; type: "QPointF"; isReadonly: true }
        Property { name: "dragging"; type: "bool"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "immediateRecognition"; type: "bool" }
        Property { name: "grabGesture"; type: "bool" }
        Signal {
            name: "directionChanged"
            Parameter { name: "direction"; type: "Direction" }
        }
        Signal {
            name: "draggingChanged"
            Parameter { name: "dragging"; type: "bool" }
        }
        Signal {
            name: "pressedChanged"
            Parameter { name: "pressed"; type: "bool" }
        }
        Signal {
            name: "distanceChanged"
            Parameter { name: "distance"; type: "double" }
        }
        Signal {
            name: "touchPositionChanged"
            Parameter { name: "position"; type: "QPointF" }
        }
        Signal {
            name: "immediateRecognitionChanged"
            Parameter { name: "immediateRecognition"; type: "bool" }
        }
        Signal {
            name: "grabGestureChanged"
            Parameter { name: "grabGesture"; type: "bool" }
        }
    }
    Component {
        name: "UCSwipeEvent"
        prototype: "QObject"
        exports: ["Ubuntu.Components/SwipeEvent 1.2"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Started": 0,
                "Updated": 1,
                "Finished": 2
            }
        }
        Property { name: "to"; type: "QPointF"; isReadonly: true }
        Property { name: "from"; type: "QPointF"; isReadonly: true }
        Property { name: "content"; type: "QPointF" }
        Property { name: "status"; type: "Status"; isReadonly: true }
    }
    Component {
        name: "UCTheme"
        prototype: "QObject"
        exports: ["Ubuntu.Components/ThemeSettings 1.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "parentTheme"; type: "UCTheme"; isReadonly: true; isPointer: true }
        Property { name: "name"; type: "string" }
        Property { name: "palette"; type: "QObject"; isPointer: true }
        Signal { name: "versionChanged" }
    }
    Component {
        name: "UCThreeLabelsSlot"
        defaultProperty: "data"
        prototype: "QQuickItem"
        Property { name: "title"; type: "UCLabel"; isReadonly: true; isPointer: true }
        Property { name: "subtitle"; type: "UCLabel"; isReadonly: true; isPointer: true }
        Property { name: "summary"; type: "UCLabel"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "UCUbuntuAnimation"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/UbuntuAnimation 0.1",
            "Ubuntu.Components/UbuntuAnimation 1.0"
        ]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0, 0]
        Property { name: "SnapDuration"; type: "int"; isReadonly: true }
        Property { name: "FastDuration"; type: "int"; isReadonly: true }
        Property { name: "BriskDuration"; type: "int"; isReadonly: true }
        Property { name: "SlowDuration"; type: "int"; isReadonly: true }
        Property { name: "SleepyDuration"; type: "int"; isReadonly: true }
        Property { name: "StandardEasing"; type: "QEasingCurve"; isReadonly: true }
        Property { name: "StandardEasingReverse"; type: "QEasingCurve"; isReadonly: true }
    }
    Component {
        name: "UCUbuntuShape"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: [
            "Ubuntu.Components/Shape 0.1",
            "Ubuntu.Components/Shape 1.0",
            "Ubuntu.Components/UbuntuShape 0.1",
            "Ubuntu.Components/UbuntuShape 1.0",
            "Ubuntu.Components/UbuntuShape 1.2",
            "Ubuntu.Components/UbuntuShape 1.3"
        ]
        exportMetaObjectRevisions: [0, 0, 0, 0, 1, 2]
        Enum {
            name: "Aspect"
            values: {
                "Flat": 0,
                "Inset": 1,
                "DropShadow": 2
            }
        }
        Enum {
            name: "BackgroundMode"
            values: {
                "SolidColor": 0,
                "VerticalGradient": 1
            }
        }
        Enum {
            name: "HAlignment"
            values: {
                "AlignLeft": 0,
                "AlignHCenter": 1,
                "AlignRight": 2
            }
        }
        Enum {
            name: "VAlignment"
            values: {
                "AlignTop": 0,
                "AlignVCenter": 1,
                "AlignBottom": 2
            }
        }
        Enum {
            name: "FillMode"
            values: {
                "Stretch": 0,
                "PreserveAspectFit": 1,
                "PreserveAspectCrop": 2,
                "Pad": 3
            }
        }
        Enum {
            name: "WrapMode"
            values: {
                "Transparent": 0,
                "Repeat": 1
            }
        }
        Property { name: "radius"; type: "string" }
        Property { name: "aspect"; revision: 1; type: "Aspect" }
        Property { name: "relativeRadius"; revision: 2; type: "double" }
        Property { name: "source"; revision: 1; type: "QVariant" }
        Property { name: "sourceOpacity"; revision: 1; type: "double" }
        Property { name: "sourceFillMode"; revision: 1; type: "FillMode" }
        Property { name: "sourceHorizontalWrapMode"; revision: 1; type: "WrapMode" }
        Property { name: "sourceVerticalWrapMode"; revision: 1; type: "WrapMode" }
        Property { name: "sourceHorizontalAlignment"; revision: 1; type: "HAlignment" }
        Property { name: "sourceVerticalAlignment"; revision: 1; type: "VAlignment" }
        Property { name: "sourceTranslation"; revision: 1; type: "QVector2D" }
        Property { name: "sourceScale"; revision: 1; type: "QVector2D" }
        Property { name: "backgroundColor"; revision: 1; type: "QColor" }
        Property { name: "secondaryBackgroundColor"; revision: 1; type: "QColor" }
        Property { name: "backgroundMode"; revision: 1; type: "BackgroundMode" }
        Property { name: "borderSource"; type: "string" }
        Property { name: "color"; type: "QColor" }
        Property { name: "gradientColor"; type: "QColor" }
        Property { name: "image"; type: "QVariant" }
        Property { name: "stretched"; type: "bool" }
        Property { name: "horizontalAlignment"; type: "HAlignment" }
        Property { name: "verticalAlignment"; type: "VAlignment" }
        Signal { name: "aspectChanged"; revision: 1 }
        Signal { name: "relativeRadiusChanged"; revision: 2 }
        Signal { name: "sourceChanged"; revision: 1 }
        Signal { name: "sourceOpacityChanged"; revision: 1 }
        Signal { name: "sourceFillModeChanged"; revision: 1 }
        Signal { name: "sourceHorizontalWrapModeChanged"; revision: 1 }
        Signal { name: "sourceVerticalWrapModeChanged"; revision: 1 }
        Signal { name: "sourceHorizontalAlignmentChanged"; revision: 1 }
        Signal { name: "sourceVerticalAlignmentChanged"; revision: 1 }
        Signal { name: "sourceTranslationChanged"; revision: 1 }
        Signal { name: "sourceScaleChanged"; revision: 1 }
        Signal { name: "backgroundColorChanged"; revision: 1 }
        Signal { name: "secondaryBackgroundColorChanged"; revision: 1 }
        Signal { name: "backgroundModeChanged"; revision: 1 }
    }
    Component {
        name: "UCUbuntuShapeOverlay"
        defaultProperty: "data"
        prototype: "UCUbuntuShape"
        exports: ["Ubuntu.Components/UbuntuShapeOverlay 1.2"]
        exportMetaObjectRevisions: [0]
        Property { name: "overlayRect"; type: "QRectF" }
        Property { name: "overlayColor"; type: "QColor" }
    }
    Component {
        name: "UCUnits"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/UCUnits 0.1",
            "Ubuntu.Components/UCUnits 1.0"
        ]
        isCreatable: false
        exportMetaObjectRevisions: [0, 0]
        Property { name: "gridUnit"; type: "float" }
        Method {
            name: "dp"
            type: "float"
            Parameter { name: "value"; type: "float" }
        }
        Method {
            name: "gu"
            type: "float"
            Parameter { name: "value"; type: "float" }
        }
    }
    Component {
        name: "UCUriHandler"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/UriHandler 0.1",
            "Ubuntu.Components/UriHandler 1.0"
        ]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0, 0]
        Signal {
            name: "opened"
            Parameter { name: "uris"; type: "QStringList" }
        }
    }
    Component {
        name: "UCViewItemsAttached"
        prototype: "QObject"
        exports: ["Ubuntu.Components/ViewItems 1.2"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ExpansionFlag"
            values: {
                "Exclusive": 1,
                "UnlockExpanded": 2,
                "CollapseOnOutsidePress": 5
            }
        }
        Property { name: "selectMode"; type: "bool" }
        Property { name: "selectedIndices"; type: "QList<int>" }
        Property { name: "dragMode"; type: "bool" }
        Property { name: "expandedIndices"; type: "QList<int>" }
        Property { name: "expansionFlags"; type: "int" }
        Signal {
            name: "selectedIndicesChanged"
            Parameter { name: "indices"; type: "QList<int>" }
        }
        Signal {
            name: "dragUpdated"
            Parameter { name: "event"; type: "UCDragEvent"; isPointer: true }
        }
        Signal {
            name: "expandedIndicesChanged"
            Parameter { name: "indices"; type: "QList<int>" }
        }
    }
    Component {
        name: "UbuntuI18n"
        prototype: "QObject"
        exports: ["Ubuntu.Components/i18n 0.1", "Ubuntu.Components/i18n 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0, 0]
        Property { name: "domain"; type: "string" }
        Property { name: "language"; type: "string" }
        Method {
            name: "bindtextdomain"
            Parameter { name: "domain_name"; type: "string" }
            Parameter { name: "dir_name"; type: "string" }
        }
        Method {
            name: "tr"
            type: "string"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "tr"
            type: "string"
            Parameter { name: "singular"; type: "string" }
            Parameter { name: "plural"; type: "string" }
            Parameter { name: "n"; type: "int" }
        }
        Method {
            name: "dtr"
            type: "string"
            Parameter { name: "domain"; type: "string" }
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "dtr"
            type: "string"
            Parameter { name: "domain"; type: "string" }
            Parameter { name: "singular"; type: "string" }
            Parameter { name: "plural"; type: "string" }
            Parameter { name: "n"; type: "int" }
        }
        Method {
            name: "ctr"
            type: "string"
            Parameter { name: "context"; type: "string" }
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "dctr"
            type: "string"
            Parameter { name: "domain"; type: "string" }
            Parameter { name: "context"; type: "string" }
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "tag"
            type: "string"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "tag"
            type: "string"
            Parameter { name: "context"; type: "string" }
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "relativeDateTime"
            type: "string"
            Parameter { name: "datetime"; type: "QDateTime" }
        }
    }
    Component {
        name: "UbuntuToolkit::ColorUtils"
        prototype: "QObject"
        exports: [
            "Ubuntu.Components/ColorUtils 0.1",
            "Ubuntu.Components/ColorUtils 1.0"
        ]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0, 0]
        Method {
            name: "luminance"
            type: "double"
            Parameter { name: "color"; type: "QColor" }
        }
    }
    Component {
        name: "UbuntuToolkit::Tree"
        prototype: "QObject"
        exports: ["Ubuntu.Components.Private/Tree 1.3"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "index"
            type: "int"
            Parameter { name: "node"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "add"
            type: "bool"
            Parameter { name: "stem"; type: "int" }
            Parameter { name: "parentNode"; type: "QObject"; isPointer: true }
            Parameter { name: "newNode"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "prune"
            type: "QList<QObject*>"
            Parameter { name: "stem"; type: "int" }
        }
        Method {
            name: "chop"
            type: "QList<QObject*>"
            Parameter { name: "jsNode"; type: "QVariant" }
            Parameter { name: "jsInclusive"; type: "QVariant" }
        }
        Method {
            name: "chop"
            type: "QList<QObject*>"
            Parameter { name: "jsNode"; type: "QVariant" }
        }
        Method {
            name: "top"
            type: "QObject*"
            Parameter { name: "jsStem"; type: "QVariant" }
            Parameter { name: "jsExactMatch"; type: "QVariant" }
            Parameter { name: "jsN"; type: "QVariant" }
        }
        Method {
            name: "top"
            type: "QObject*"
            Parameter { name: "jsStem"; type: "QVariant" }
            Parameter { name: "jsExactMatch"; type: "QVariant" }
        }
        Method {
            name: "top"
            type: "QObject*"
            Parameter { name: "jsStem"; type: "QVariant" }
        }
        Method { name: "top"; type: "QObject*" }
        Method {
            name: "parent"
            type: "QObject*"
            Parameter { name: "node"; type: "QObject"; isPointer: true }
        }
    }
    Component {
        prototype: "QObject"
        name: "UbuntuColors"
        exports: ["UbuntuColors 1.3"]
        exportMetaObjectRevisions: [3]
        isComposite: true
        isCreatable: false
        isSingleton: true
        Property { name: "orange"; type: "QColor"; isReadonly: true }
        Property { name: "lightAubergine"; type: "QColor"; isReadonly: true }
        Property { name: "midAubergine"; type: "QColor"; isReadonly: true }
        Property { name: "darkAubergine"; type: "QColor"; isReadonly: true }
        Property { name: "warmGrey"; type: "QColor"; isReadonly: true }
        Property { name: "coolGrey"; type: "QColor"; isReadonly: true }
        Property { name: "orangeGradient"; type: "QQuickGradient"; isPointer: true }
        Property { name: "greyGradient"; type: "QQuickGradient"; isPointer: true }
    }
}
